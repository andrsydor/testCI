version: 2.1

orbs:
  python: circleci/python@1.5.0

executors:
  pyex:
    docker:
      - image: cimg/python:3.10.2

commands:
  currnt-branch-print:
    steps:
      - run:
          name: Current branch
          command: |
            echo "current branch"
            echo << pipeline.git.branch >>

jobs:
  build-and-test:
    # These next lines defines a Docker executors: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of the convenience images from CircleCI's Developer Hub
    # A list of available CircleCI Docker convenience images are available here: https://circleci.com/developer/images/image/cimg/python
    # The executor is the environment in which the steps below will be executed - below will use a python 3.10.2 container
    # Change the version below to your required version of python
    # Checkout the code as the first step. This is a dedicated CircleCI step.
    # The python orb's install-packages step will install the dependencies from a Pipfile via Pipenv by default.
    # Here we're making sure we use just use the system-wide pip. By default it uses the project root's requirements.txt.
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    executor: pyex
    steps:
      - checkout
      - currnt-branch-print
      - python/install-packages:
          pkg-manager: pip
          # app-dir: ~/project/package-directory/
          # pip-dependency-file: test-requirements.txt
      - run:
          name: Run main
          command: python main.py

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
